# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app_url: '%env(APP_URL)%'
    server_files_path: '%env(SERVER_FILES_PATH)%'
    server_private_files_path: '%env(SERVER_PRIVATE_FILES_PATH)%'
    upload_directory: '%kernel.project_dir%/public/upload'
    twillio_file_upload_public: '%env(resolve:TWILIO_FILE_UPLOAD_PUBLIC)%'
    activeDayStart: -3
    activeDayEnd: 7
    cronUser: '%env(CRON_USER)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
   # Explicitly define the UnsplashApiService with an API key
    App\Service\UnsplashApiService:
        arguments:
            $apiKey: '%env(string:unsplash_KEY)%'

    App\Service\JwtTokenService: ~

    # Assurez-vous que le service JWTManager est correctement configuré
    Lexik\Bundle\JWTAuthenticationBundle\Services\JWTManager:
        alias: lexik_jwt_authentication.jwt_manager

    App\Security\JwtAuthenticator:
        tags:
            - { name: 'security.authenticator' }

    App\EventListener\AuthenticationSuccessListener:
        tags:
            - { name: kernel.event_listener, event: kernel.response, method: setRefreshTokenCookie }

    App\Service\TokenCleanupService:
        arguments:
            $phpBinaryPath: '%env(string:phpBinaryPath)%'
            $consolePath: '%env(string:consolePath)%'
            $entityManager: '@doctrine.orm.entity_manager'
     # Configuration du service pour CleanupTokensMessageHandler
    App\Scheduler\MessageHandler\CleanupTokensMessageHandler:
        arguments:
            $phpBinaryPath: '%env(string:phpBinaryPath)%'
            $consolePath: '%env(string:consolePath)%'  

     # Configuration du service pour CronMessageHandler
    App\Scheduler\MessageHandler\CronMessageHandler:
        arguments:
            $phpBinaryPath: '%env(string:phpBinaryPath)%'
            $consolePath: '%env(string:consolePath)%'  
                 
    App\EventSubscriber\ApiExceptionSubscriber:
        tags:
            - { name: 'kernel.event_subscriber' }

    App\Serializer\EntityDenormalizer:
        tags: 
            - { name: 'serializer.normalizer', priority: 10 }  # Priorité facultative, mais utile pour définir l'ordre de dénormalisation

    App\Service\MailerService:
        arguments:
            $from: '%env(string:SENDER)%'
            $requestStack: '@request_stack'

    App\Service\PhpseclibService:
        arguments:
            $host: '%env(SFTP_HOST)%'
            $username: '%env(SFTP_USERNAME)%'
            $password: '%env(SFTP_PASSWORD)%'

    App\Service\TwilioService:
        arguments:
            $accountSid: '%env(TWILIO_ACCOUNT_SID)%'
            $authToken: '%env(TWILIO_AUTH_TOKEN)%'
            $from: '%env(TWILIO_FROM_NUMBER)%' 

    App\Service\EventDuplicationService:
        autowire: true
        autoconfigure: true
        public: true # Or omit this line for default behavior

    App\Service\Event\EventService:
        lazy: true
        # Make the services lazy-loaded so they are only initialized when explicitly needed to bypass the circular reference issue.
    App\Service\Event\TagService:
        lazy: true


      

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
